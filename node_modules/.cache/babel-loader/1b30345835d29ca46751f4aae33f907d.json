{"ast":null,"code":"var _jsxFileName = \"/Users/zim/WORK/GIT-REPOS/JAVASCRIPT/REACT/assets/SANDPIT/CRA/omni-todo-app/src/components/TodoForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { API_URL } from '../config';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Checkbox, IconButton, Input, FilledInput, OutlinedInput, InputLabel, InputAdornment, FormControl, Fab, FormLabel, FormControlLabel, FormHelperText, FormGroup, TextField } from '@material-ui/core';\nimport AddIcon from \"@material-ui/icons/Add\";\nconsole.log(API_URL);\nconst toastColor = {\n  background: '#505050',\n  text: '#fff'\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3)\n  },\n  textField: {\n    width: '25ch'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  form: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    outline: 'none',\n    padding: theme.spacing(2, 4, 3),\n    width: '100%'\n  }\n}));\n\nfunction TodoForm(props) {\n  console.log(props);\n  const classes = useStyles(); // const [Id, setId] = useState(null);\n\n  const [Id, setId] = useState(Math.floor(Math.random() * 10000)); // Create input state\n\n  const [inputTitle, setInputTitle] = useState(\"\");\n\n  const handleChangeTitle = e => {\n    console.log(e.target.value);\n    setInputTitle(e.target.value);\n  };\n\n  const [inputDescription, setInputDescription] = useState(\"\");\n\n  const handleChangeDescription = e => {\n    console.log(e.target.value);\n    setInputDescription(e.target.value);\n  };\n\n  const [inputComplete, setInputComplete] = useState(false);\n\n  const handleChangeComplete = e => {\n    console.log(e.target.checked);\n    setInputComplete(e.target.checked);\n  };\n\n  const [inputUploading, setInputUploading] = useState(false);\n\n  const handleChangeUploading = e => {\n    console.log(e.target);\n    setInputUploading(true);\n  };\n\n  const [formdata, setFormdata] = useState([]);\n\n  const handleChangeformdata = e => {\n    console.log(e.target); // setFormdata(true);\n  }; // var options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n\n\n  const today = new Date();\n  const dateToday = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate(); // const dateToday = today;\n\n  const dateTodayVersion1 = today.toLocaleDateString(\"en-UK\");\n  console.log(dateToday);\n  console.log(dateTodayVersion1);\n  const [inputDueDate, setInputDueDate] = useState(dateToday);\n\n  const handleChangeDueDate = e => {\n    console.log(e.target.value);\n    setInputDueDate(e.target.value);\n  };\n\n  const [inputImages, setInputImages] = useState([]);\n\n  const handleChangeImages = e => {\n    console.log('const handleChangeImages = (e) => {');\n    console.log(e.target);\n    setInputImages(e.target);\n  };\n\n  const handleChangeImage = e => {\n    console.log('const handleChangeImage = (e) => {');\n    console.dir(e);\n    console.log(e.target);\n    console.log(e.target.files);\n    const errs = [];\n    const files = Array.from(e.target.files);\n    console.log(files);\n\n    if (files.length > 3) {\n      const msg = 'Only 3 images can be uploaded at a time';\n      return this.toast(msg, 'custom', 2000, toastColor);\n    } // const formData = new FormData();\n\n\n    const types = ['image/png', 'image/jpeg', 'image/gif'];\n    const tmpArray = [];\n    console.log(formdata);\n    files.forEach((file, i) => {\n      console.log(file);\n      console.log(typeof file);\n\n      if (types.every(type => file.type !== type)) {\n        errs.push(`'${file.type}' is not a supported format`);\n      }\n\n      if (file.size > 150000) {\n        errs.push(`'${file.name}' is too large, please pick a smaller file`);\n      } // formData.append(i, file);\n\n\n      tmpArray.push(file);\n      console.log(tmpArray);\n    });\n    setFormdata(tmpArray);\n    console.log(formdata); // if (errs.length) {\n    //     return \n    // }\n    // fetch(`${API_URL}/image-upload`, {\n    //     method: 'POST',\n    //     body: formData\n    // })\n    //     .then(res => {\n    //         if (!res.ok) {\n    //             throw res\n    //         }\n    //         console.log(res);\n    //         return res.json()\n    //     })\n    //     .then(inputImages => {\n    //         setInputUploading(false);\n    //         setInputImages(inputImages);\n    //     })\n    //     .catch(err => {\n    //         err.json().then(e => {\n    //             this.toast(e.message, 'custom', 2000, toastColor);\n    //             setInputUploading(true);\n    //             // this.setState({ uploading: false })\n    //         })\n    //     })\n    // setInputDueDate(e.target.value);\n  };\n\n  const onChangeImage = e => {\n    console.log('onChangeImage = efdsfsdfsdfsdfsdfgsdg => {');\n    console.log(e);\n    const errs = [];\n    const files = Array.from(e.target.files);\n\n    if (files.length > 3) {\n      const msg = 'Only 3 images can be uploaded at a time';\n      return this.toast(msg, 'custom', 2000, toastColor);\n    }\n\n    const formData = new FormData();\n    const types = ['image/png', 'image/jpeg', 'image/gif'];\n  };\n\n  useEffect(() => {\n    console.log(\"useEffect Todo form\"); // console.log(props);\n    // console.log(props.editId);\n    // console.log(props.todos);\n\n    if (props.editId == null) {\n      console.log('id = nullll');\n    } else {\n      console.log('id NOT nullll'); // console.log(props.editId);\n\n      const result = props.todos.filter(todo => todo.id === props.editId); // console.dir(result);\n      // console.log(result[0].id);\n      // console.log(result[0].title);\n      // console.log(result[0].description);\n      // console.log(result[0].dueDate);\n      // console.log(result[0].complete);\n\n      setId(result[0].id);\n      setInputTitle(result[0].title);\n      setInputDueDate(result[0].dueDate);\n      setInputDescription(result[0].description);\n      setInputComplete(result[0].complete);\n    } // setInput(e.target.value);\n    // setInputSection(e.target.value);\n    // const todos = JSON.parse(localStorage.getItem('todos'));\n    // if (todos) {\n    //     setTodos(todos);\n    // }\n\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"on submitttttt\"); // console.dir(e.target.parentNode[0][0].text);\n    // console.log(props.editId);\n    // console.log(props.todos);\n    // console.log(Id);\n    // console.log(inputTitle);\n    // console.log(inputDescription);\n    // console.log(inputDueDate);\n    // console.log(inputComplete);\n\n    if (props.editId == null) {\n      console.log('id = nullll');\n      props.onSubmit({\n        id: Id,\n        title: inputTitle,\n        description: inputDescription,\n        dueDate: inputDueDate,\n        complete: inputComplete\n      });\n      setInputTitle(\"\");\n      setInputDescription(\"\");\n      setInputDueDate(null);\n      setInputComplete([0]); // e.target.parentNode[0][0].selected = true;\n\n      props.onClose();\n    } else {\n      props.editTodo(Id, inputTitle, inputDescription, inputDueDate, inputComplete);\n      props.setEdit();\n      props.onClose(); // props.onClickHide();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    noValidate: true,\n    autoComplete: \"off\",\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 17\n    }\n  }, \"Add Todo Form\"), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"icon-button-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    color: \"secondary\",\n    size: \"small\",\n    component: \"span\",\n    \"aria-label\": \"add\",\n    variant: \"extended\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 29\n    }\n  }), \" Upload photo\")), /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      display: \"none\"\n    },\n    color: \"primary\",\n    accept: \"image/*\",\n    type: \"file\",\n    onChange: handleChangeImage,\n    id: \"icon-button-file\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"input-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 21\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"input-title\",\n    placeholder: \"Title\",\n    fullWidth: true,\n    margin: \"normal\",\n    variant: \"outlined\",\n    value: inputTitle,\n    onChange: handleChangeTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"input-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 21\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"input-description\",\n    fullWidth: true,\n    margin: \"normal\",\n    multiline: true,\n    onChange: handleChangeDescription,\n    placeholder: \"Description\",\n    rows: 3,\n    value: inputDescription,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"input-due-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 21\n    }\n  }, \"Due Date\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"input-due-date\",\n    type: \"date\",\n    margin: \"normal\",\n    onChange: handleChangeDueDate,\n    value: inputDueDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"complete\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      onChange: handleChangeComplete,\n      color: \"primary\",\n      checked: inputComplete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 34\n      }\n    }),\n    label: \"Complete\",\n    labelPlacement: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 21\n    }\n  }, \"add todo\"))), \"formdata.map((image, i) =>\", /*#__PURE__*/React.createElement(\"div\", {\n    key: i,\n    className: \"fadein\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => props.removeImage(image.public_id),\n    className: \"delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 17\n    }\n  }, \"hi\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: image.secure_url,\n    alt: \"\",\n    onError: () => props.onError(image.public_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 17\n    }\n  })), \")\");\n}\n\nexport default TodoForm;","map":{"version":3,"sources":["/Users/zim/WORK/GIT-REPOS/JAVASCRIPT/REACT/assets/SANDPIT/CRA/omni-todo-app/src/components/TodoForm.js"],"names":["React","useState","useEffect","API_URL","makeStyles","Button","Checkbox","IconButton","Input","FilledInput","OutlinedInput","InputLabel","InputAdornment","FormControl","Fab","FormLabel","FormControlLabel","FormHelperText","FormGroup","TextField","AddIcon","console","log","toastColor","background","text","useStyles","theme","root","display","flexWrap","margin","spacing","withoutLabel","marginTop","textField","width","modal","alignItems","justifyContent","paper","backgroundColor","palette","border","boxShadow","shadows","padding","form","outline","TodoForm","props","classes","Id","setId","Math","floor","random","inputTitle","setInputTitle","handleChangeTitle","e","target","value","inputDescription","setInputDescription","handleChangeDescription","inputComplete","setInputComplete","handleChangeComplete","checked","inputUploading","setInputUploading","handleChangeUploading","formdata","setFormdata","handleChangeformdata","today","Date","dateToday","getFullYear","getMonth","getDate","dateTodayVersion1","toLocaleDateString","inputDueDate","setInputDueDate","handleChangeDueDate","inputImages","setInputImages","handleChangeImages","handleChangeImage","dir","files","errs","Array","from","length","msg","toast","types","tmpArray","forEach","file","i","every","type","push","size","name","onChangeImage","formData","FormData","editId","result","todos","filter","todo","id","title","dueDate","description","complete","handleSubmit","preventDefault","onSubmit","onClose","editTodo","setEdit","removeImage","image","public_id","secure_url","onError"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { API_URL } from '../config';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Button, Checkbox, IconButton, Input, FilledInput, OutlinedInput, InputLabel, InputAdornment, FormControl, Fab, FormLabel, FormControlLabel, FormHelperText, FormGroup, TextField } from '@material-ui/core';\n\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconsole.log(API_URL);\n\nconst toastColor = {\n    background: '#505050',\n    text: '#fff'\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    margin: {\n        margin: theme.spacing(1),\n    },\n    withoutLabel: {\n        marginTop: theme.spacing(3),\n    },\n    textField: {\n        width: '25ch',\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    form: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        outline: 'none',\n        padding: theme.spacing(2, 4, 3),\n        width: '100%',\n    },\n}));\n\n\nfunction TodoForm(props) {\n\n    console.log(props);\n    const classes = useStyles();\n\n    // const [Id, setId] = useState(null);\n    const [Id, setId] = useState(Math.floor(Math.random() * 10000));\n\n    // Create input state\n    const [inputTitle, setInputTitle] = useState(\"\");\n    const handleChangeTitle = (e) => {\n        console.log(e.target.value);\n        setInputTitle(e.target.value);\n    };\n\n    const [inputDescription, setInputDescription] = useState(\"\");\n    const handleChangeDescription = (e) => {\n        console.log(e.target.value);\n        setInputDescription(e.target.value);\n    };\n\n    const [inputComplete, setInputComplete] = useState(false);\n    const handleChangeComplete = (e) => {\n        console.log(e.target.checked);\n        setInputComplete(e.target.checked);\n    };\n\n    const [inputUploading, setInputUploading] = useState(false);\n    const handleChangeUploading = (e) => {\n        console.log(e.target);\n        setInputUploading(true);\n    };\n\n    const [formdata, setFormdata] = useState([]);\n    const handleChangeformdata = (e) => {\n        console.log(e.target);\n        // setFormdata(true);\n    };\n\n    // var options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n    const today = new Date();\n\n    const dateToday = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n    // const dateToday = today;\n    const dateTodayVersion1 = today.toLocaleDateString(\"en-UK\");\n\n    console.log(dateToday);\n    console.log(dateTodayVersion1);\n\n\n    const [inputDueDate, setInputDueDate] = useState(dateToday);\n    \n    const handleChangeDueDate = (e) => {\n        console.log(e.target.value);\n        \n        setInputDueDate(e.target.value);\n    };\n\n    const [inputImages, setInputImages] = useState([]);\n    \n    const handleChangeImages = (e) => {\n        console.log('const handleChangeImages = (e) => {');\n        console.log(e.target);\n        \n        setInputImages(e.target);\n    };\n\n    const handleChangeImage = (e) => {\n        console.log('const handleChangeImage = (e) => {');\n        console.dir(e);\n        console.log(e.target);\n        console.log(e.target.files);\n\n        const errs = []\n        const files = Array.from(e.target.files);\n        console.log(files);\n\n        if (files.length > 3) {\n            const msg = 'Only 3 images can be uploaded at a time'\n            return this.toast(msg, 'custom', 2000, toastColor)\n        }\n\n        // const formData = new FormData();\n        const types = ['image/png', 'image/jpeg', 'image/gif'];\n        const tmpArray = [];\n        console.log(formdata);\n\n        files.forEach((file, i) => {\n            console.log(file);\n            console.log(typeof file);\n\n            if (types.every(type => file.type !== type)) {\n                errs.push(`'${file.type}' is not a supported format`)\n            }\n\n            if (file.size > 150000) {\n                errs.push(`'${file.name}' is too large, please pick a smaller file`)\n            }\n\n            // formData.append(i, file);\n\n            tmpArray.push(file);\n\n\n            console.log(tmpArray);\n        })\n\n        setFormdata(tmpArray);\n\n        console.log(formdata);\n\n        // if (errs.length) {\n        //     return \n        // }\n\n\n        // fetch(`${API_URL}/image-upload`, {\n        //     method: 'POST',\n        //     body: formData\n        // })\n        //     .then(res => {\n        //         if (!res.ok) {\n        //             throw res\n        //         }\n        //         console.log(res);\n        //         return res.json()\n        //     })\n        //     .then(inputImages => {\n\n        //         setInputUploading(false);\n        //         setInputImages(inputImages);\n\n                \n        //     })\n        //     .catch(err => {\n        //         err.json().then(e => {\n        //             this.toast(e.message, 'custom', 2000, toastColor);\n        //             setInputUploading(true);\n        //             // this.setState({ uploading: false })\n        //         })\n        //     })\n        \n        // setInputDueDate(e.target.value);\n    };\n\n    const onChangeImage = e => {\n        console.log('onChangeImage = efdsfsdfsdfsdfsdfgsdg => {');\n        console.log(e);\n        const errs = []\n        const files = Array.from(e.target.files)\n\n        if (files.length > 3) {\n            const msg = 'Only 3 images can be uploaded at a time'\n            return this.toast(msg, 'custom', 2000, toastColor)\n        }\n\n        const formData = new FormData()\n        const types = ['image/png', 'image/jpeg', 'image/gif']\n    }\n\n\n\n\n    useEffect(() => {\n        console.log(\"useEffect Todo form\");\n        // console.log(props);\n\n        // console.log(props.editId);\n        // console.log(props.todos);\n\n        if (props.editId == null) {\n            console.log('id = nullll');\n        } else {\n            console.log('id NOT nullll');\n            // console.log(props.editId);\n\n            const result = props.todos.filter(todo => todo.id === props.editId);\n            // console.dir(result);\n            // console.log(result[0].id);\n\n            // console.log(result[0].title);\n            // console.log(result[0].description);\n            // console.log(result[0].dueDate);\n            // console.log(result[0].complete);\n\n            setId(result[0].id);\n            setInputTitle(result[0].title);\n            setInputDueDate(result[0].dueDate);\n            setInputDescription(result[0].description);\n            setInputComplete(result[0].complete);\n\n        }\n\n        // setInput(e.target.value);\n        // setInputSection(e.target.value);\n\n        // const todos = JSON.parse(localStorage.getItem('todos'));\n        // if (todos) {\n        //     setTodos(todos);\n        // }\n    }, []);\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(\"on submitttttt\");\n        // console.dir(e.target.parentNode[0][0].text);\n        // console.log(props.editId);\n        // console.log(props.todos);\n        // console.log(Id);\n        // console.log(inputTitle);\n        // console.log(inputDescription);\n        // console.log(inputDueDate);\n        // console.log(inputComplete);\n\n\n        if (props.editId == null) {\n            console.log('id = nullll');\n\n            props.onSubmit({\n                id: Id,\n                title: inputTitle,\n                description: inputDescription,\n                dueDate: inputDueDate,\n                complete: inputComplete\n            });\n            setInputTitle(\"\");\n            setInputDescription(\"\");\n            setInputDueDate(null);\n            setInputComplete([0]);\n\n            // e.target.parentNode[0][0].selected = true;\n\n            props.onClose();\n\n        } else {\n            props.editTodo(Id, inputTitle, inputDescription, inputDueDate, inputComplete);\n            props.setEdit();\n            props.onClose();\n            // props.onClickHide();\n        }\n\n\n    };\n\n    return (\n        <React.Fragment >\n\n            <form onSubmit={handleSubmit} noValidate autoComplete=\"off\" className={classes.form}>\n\n                <FormLabel component=\"legend\">Add Todo Form</FormLabel>\n\n                <FormGroup>\n\n                    <InputLabel htmlFor='icon-button-file'>\n                        <Fab\n                            color=\"secondary\"\n                            size=\"small\"\n                            component=\"span\"\n                            aria-label=\"add\"\n                            variant=\"extended\"\n                        >\n                            <AddIcon /> Upload photo\n        </Fab>\n                    </InputLabel>\n                    \n\n                    <input\n                        style={{ display: \"none\" }}\n                        color=\"primary\"\n                        accept=\"image/*\"\n                        type=\"file\"\n                        onChange={handleChangeImage}\n                        id=\"icon-button-file\"\n                        margin=\"normal\"\n\n                        variant=\"outlined\"\n                    />\n                    \n\n\n                    <InputLabel htmlFor=\"input-title\">Title</InputLabel>\n                    <TextField\n                        id=\"input-title\"\n\n\n                        placeholder=\"Title\"\n                        fullWidth\n                        margin=\"normal\"\n\n                        variant=\"outlined\"\n\n                        value={inputTitle}\n                        onChange={handleChangeTitle}\n                    />\n\n                    <InputLabel htmlFor=\"input-description\">Description</InputLabel>\n                    <TextField\n                        id=\"input-description\"\n                        fullWidth\n                        margin=\"normal\"\n                        multiline={true}\n                        onChange={handleChangeDescription}\n                        placeholder=\"Description\"\n                        rows={3}\n                        value={inputDescription}\n                        variant=\"outlined\"\n                    />\n\n                    <InputLabel htmlFor=\"input-due-date\">Due Date</InputLabel>\n                    <TextField\n                        id=\"input-due-date\"\n\n                        type=\"date\"\n                        margin=\"normal\"\n                        onChange={handleChangeDueDate}\n                        value={inputDueDate}\n                    />\n\n                    \n\n                    <FormControlLabel\n                        value=\"complete\"\n                        control={<Checkbox onChange={handleChangeComplete} color=\"primary\" checked={inputComplete} />}\n                        label=\"Complete\"\n                        labelPlacement=\"start\"\n\n                    />\n\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>add todo</Button>\n\n                </FormGroup>\n\n            </form>\n\n            formdata.map((image, i) =>\n            <div key={i} className='fadein'>\n                <div\n                    onClick={() => props.removeImage(image.public_id)}\n                    className='delete'\n                >\n                   hi\n                </div>\n                <img\n                    src={image.secure_url}\n                    alt=''\n                    onError={() => props.onError(image.public_id)}\n                />\n            </div>\n  )\n\n\n\n        </React.Fragment>\n\n    );\n}\n\nexport default TodoForm;\n"]},"metadata":{},"sourceType":"module"}