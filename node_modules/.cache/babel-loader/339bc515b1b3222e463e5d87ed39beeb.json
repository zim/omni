{"ast":null,"code":"var _jsxFileName = \"/Users/zim/WORK/GIT-REPOS/JAVASCRIPT/REACT/assets/SANDPIT/CRA/omni-todo-app/src/components/TodoList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport Todo from './Todo';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Button, Modal, Backdrop, Fade } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n    minWidth: 600\n  },\n  listItemText: {\n    border: '2px solid red',\n    alignItems: 'left',\n    justifyContent: 'left'\n  },\n  todolist: {\n    width: '100%',\n    // maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    minWidth: 600\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    minWidth: '60%'\n  }\n}));\n\nfunction TodoList() {\n  const classes = useStyles(); // useState hooks\n\n  const [checked, setChecked] = React.useState([1]);\n  const [todos, setTodos] = useState([]);\n  const [todosSelected, setTodosSelected] = useState([]); //Track is edit clicked or not\n\n  const [editId, setEdit] = useState(null);\n  const [inputValue, setInputValue] = useState(\"\"); // Set localStorage on initial mount\n\n  useEffect(() => {\n    console.log(\"use effect one\");\n    const todos = JSON.parse(localStorage.getItem('todos-omni'));\n\n    if (todos) {\n      setTodos(todos);\n    }\n  }, []); // update localStorage on data change\n\n  useEffect(() => {\n    console.log(\"use effect two\");\n    localStorage.setItem('todos-omni', JSON.stringify(todos));\n  }, [todos]); // console.log(todos);\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked]; // console.log(value);\n    // console.log(currentIndex);\n    // console.log(newChecked);\n\n    if (currentIndex === -1) {\n      console.log(\"currentIndex === -1\");\n      newChecked.push(value); // completeTodo(value);\n    } else {\n      console.log(\"Else currentIndex === -1\"); // completeTodo(value);\n\n      newChecked.splice(currentIndex, 1);\n    }\n\n    completeTodo(value);\n    setChecked(newChecked);\n  };\n\n  const handleEditChange = (id, text) => {\n    console.log(\"handle edit channngge\"); // console.log(id);\n    // console.log(text);\n\n    setEdit(id);\n    setInputValue(text);\n    handleOpen(); // setModalShow(true);\n  };\n\n  const addTodo = todo => {\n    if (!todo.title || /^\\s*$/.test(todo.title)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n\n  const removeTodo = id => {\n    const removedArr = [...todos].filter(todoId => todoId.id !== id);\n    setTodos(removedArr);\n  };\n\n  const completeTodo = id => {\n    console.log(\"completeTodo\");\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.complete = !todo.complete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  const editTodo = (id, title, description, dueDate, complete) => {\n    console.log(\"const editTodo = (id, title, description, dueDate, complete) => {\");\n    let editTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.title = title;\n        todo.description = description;\n        todo.dueDate = dueDate;\n        todo.complete = complete;\n      }\n\n      return todo;\n    });\n    setTodos(editTodos);\n    setEdit(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    \"aria-labelledby\": \"transition-modal-title\",\n    \"aria-describedby\": \"transition-modal-description\",\n    className: classes.modal,\n    open: open,\n    onClose: handleClose,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Fade, {\n    in: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TodoForm, {\n    onClose: handleClose,\n    onSubmit: addTodo,\n    todos: todos,\n    editId: editId,\n    editTodo: editTodo,\n    setEdit: setEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, \"Create Todo\"), todos.map((todo, index) => {\n    return /*#__PURE__*/React.createElement(Todo, {\n      key: index,\n      id: todo.id,\n      title: todo.title,\n      description: todo.description,\n      useDate: todo.useDate,\n      complete: todo.complete,\n      handleToggle: e => handleToggle(e),\n      checked: checked,\n      todos: todosSelected,\n      setTodos: setTodos,\n      completeTodo: completeTodo,\n      removeTodo: removeTodo,\n      editTodo: editTodo,\n      handleEditChange: handleEditChange,\n      editId: editId,\n      inputValue: inputValue,\n      setInputValue: setInputValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }\n    });\n  })));\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/zim/WORK/GIT-REPOS/JAVASCRIPT/REACT/assets/SANDPIT/CRA/omni-todo-app/src/components/TodoList.js"],"names":["React","useState","useEffect","TodoForm","Todo","makeStyles","Container","Button","Modal","Backdrop","Fade","useStyles","theme","root","width","backgroundColor","palette","background","paper","minWidth","listItemText","border","alignItems","justifyContent","todolist","modal","display","TodoList","classes","checked","setChecked","todos","setTodos","todosSelected","setTodosSelected","editId","setEdit","inputValue","setInputValue","console","log","JSON","parse","localStorage","getItem","setItem","stringify","open","setOpen","handleOpen","handleClose","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","completeTodo","handleEditChange","id","text","addTodo","todo","title","test","newTodos","removeTodo","removedArr","filter","todoId","updatedTodos","map","complete","editTodo","description","dueDate","editTodos","timeout","index","useDate","e"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport Todo from './Todo';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Button, Modal, Backdrop, Fade } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n        minWidth: 600,\n    },\n    listItemText: {\n        border: '2px solid red',\n        alignItems: 'left',\n        justifyContent: 'left',\n    },\n    todolist: {\n        width: '100%',\n        // maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n        minWidth: 600,\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        minWidth: '60%',\n    },\n}));\n\nfunction TodoList() {\n    const classes = useStyles();\n\n    // useState hooks\n    const [checked, setChecked] = React.useState([1]);\n    const [todos, setTodos] = useState([]);\n\n    const [todosSelected, setTodosSelected] = useState([]);\n    //Track is edit clicked or not\n    const [editId, setEdit] = useState(null);\n\n    const [inputValue, setInputValue] = useState(\"\");\n\n    // Set localStorage on initial mount\n    useEffect(() => {\n        console.log(\"use effect one\");\n\n        const todos = JSON.parse(localStorage.getItem('todos-omni'));\n        if (todos) {\n            setTodos(todos);\n        }\n    }, []);\n\n    // update localStorage on data change\n    useEffect(() => {\n        console.log(\"use effect two\");\n\n        localStorage.setItem('todos-omni', JSON.stringify(todos));\n    }, [todos]);\n\n    // console.log(todos);\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleToggle = (value) => () => {\n\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        // console.log(value);\n        // console.log(currentIndex);\n        // console.log(newChecked);\n\n\n        if (currentIndex === -1) {\n            console.log(\"currentIndex === -1\");\n            newChecked.push(value);\n            // completeTodo(value);\n        } else {\n            console.log(\"Else currentIndex === -1\");\n            // completeTodo(value);\n            newChecked.splice(currentIndex, 1);\n        }\n\n        completeTodo(value);\n        setChecked(newChecked);\n    };\n\n    const handleEditChange = (id, text) => {\n        console.log(\"handle edit channngge\");\n        // console.log(id);\n        // console.log(text);\n\n        setEdit(id);\n        setInputValue(text);\n        handleOpen();\n\n        // setModalShow(true);\n    };\n\n    const addTodo = (todo) => {\n        if (!todo.title || /^\\s*$/.test(todo.title)) {\n            return;\n        }\n\n        const newTodos = [todo, ...todos];\n        setTodos(newTodos);\n    };\n\n    const removeTodo = (id) => {\n        const removedArr = [...todos].filter((todoId) => todoId.id !== id);\n\n        setTodos(removedArr);\n    };\n\n    const completeTodo = (id) => {\n        console.log(\"completeTodo\");\n        let updatedTodos = todos.map((todo) => {\n            if (todo.id === id) {\n                todo.complete = !todo.complete;\n            }\n            return todo;\n        });\n        setTodos(updatedTodos);\n    };\n\n    const editTodo = (id, title, description, dueDate, complete) => {\n        console.log(\"const editTodo = (id, title, description, dueDate, complete) => {\");\n\n        let editTodos = todos.map((todo) => {\n            if (todo.id === id) {\n                todo.title = title;\n                todo.description = description;\n                todo.dueDate = dueDate;\n                todo.complete = complete;\n            }\n            return todo;\n        });\n        setTodos(editTodos);\n        setEdit(false);\n    };\n\n\n    return (\n        <React.Fragment>\n\n\n\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <div className={classes.modal}>\n                        <TodoForm onClose={handleClose} onSubmit={addTodo} todos={todos} editId={editId} editTodo={editTodo} setEdit={setEdit} />\n                    </div>\n                </Fade>\n            </Modal>\n\n            <Container>\n                \n                <Button variant=\"contained\" color=\"primary\" onClick={handleOpen}>\n                    Create Todo\n                </Button>\n\n                {todos.map((todo, index) => {\n\n                    return (\n\n                        <Todo\n                            key={index}\n                            id={todo.id}\n                            title={todo.title}\n                            description={todo.description}\n                            useDate={todo.useDate}\n                            complete={todo.complete}\n                            handleToggle={(e) => handleToggle(e)}\n                            checked={checked}\n                            todos={todosSelected}\n                            setTodos={setTodos}\n                            completeTodo={completeTodo}\n                            removeTodo={removeTodo}\n                            editTodo={editTodo}\n                            handleEditChange={handleEditChange}\n                            editId={editId}\n                            inputValue={inputValue}\n                            setInputValue={setInputValue}\n                        />\n\n                    );\n                })}\n            </Container>\n\n        </React.Fragment>\n\n    );\n}\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}