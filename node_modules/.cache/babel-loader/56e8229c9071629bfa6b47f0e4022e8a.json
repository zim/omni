{"ast":null,"code":"var _jsxFileName = \"/Users/zim/WORK/GIT-REPOS/JAVASCRIPT/REACT/assets/SANDPIT/CRA/omni-todo-app/src/components/TodoForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport TextField from '@material-ui/core/TextField';\n\nfunction TodoForm(props) {\n  console.log(props); // const [Id, setId] = useState(null);\n\n  const [Id, setId] = useState(Math.floor(Math.random() * 10000));\n  const [sections, setSections] = useState(props.sections);\n  const [input, setInput] = useState(\"\");\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const [inputDescription, setInputDescription] = useState(\"\");\n\n  const handleChangeDescription = e => {\n    setInputDescription(e.target.value);\n  };\n\n  useEffect(() => {\n    console.log(\"useEffect Todo form\");\n    console.log(props);\n    console.log(props.editId);\n    console.log(props.todos);\n\n    if (props.editId == null) {\n      console.log('id = nullll');\n    } else {\n      console.log('id NOT nullll');\n      console.log(props.editId);\n      const result = props.todos.filter(todo => todo.id === props.editId);\n      console.dir(result);\n      console.log(result[0].id);\n      console.log(result[0].text);\n      console.log(result[0].complete);\n      console.log(result[0].description);\n      setId(result[0].id);\n      setInput(result[0].text);\n      setInputDescription(result[0].description);\n    } // setInput(e.target.value);\n    // setInputSection(e.target.value);\n    // const todos = JSON.parse(localStorage.getItem('todos'));\n    // if (todos) {\n    //     setTodos(todos);\n    // }\n\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault(); // console.dir(e.target.parentNode[0][0].text);\n\n    console.log(props.editId);\n    console.log(props.todos);\n\n    if (props.editId == null) {\n      console.log('id = nullll');\n      props.onSubmit({\n        id: Id,\n        text: input,\n        complete: false,\n        description: inputDescription\n      });\n      setInput(\"\");\n      setInputDescription(\"\");\n      e.target.parentNode[0][0].selected = true;\n      props.onClickHide();\n    } else {\n      props.editTodo(Id, input, inputDescription);\n      props.setEdit();\n      props.onClickHide();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, Id), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    noValidate: true,\n    autoComplete: \"off\",\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Standard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-multiline-static\",\n    label: \"Multiline\",\n    multiline: true,\n    rows: 4,\n    defaultValue: \"Default Value\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, \"add todo\")));\n}\n\nexport default TodoForm;","map":{"version":3,"sources":["/Users/zim/WORK/GIT-REPOS/JAVASCRIPT/REACT/assets/SANDPIT/CRA/omni-todo-app/src/components/TodoForm.js"],"names":["React","useState","useEffect","TextField","TodoForm","props","console","log","Id","setId","Math","floor","random","sections","setSections","input","setInput","handleChange","e","target","value","inputDescription","setInputDescription","handleChangeDescription","editId","todos","result","filter","todo","id","dir","text","complete","description","handleSubmit","preventDefault","onSubmit","parentNode","selected","onClickHide","editTodo","setEdit","classes","paper"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport TextField from '@material-ui/core/TextField';\n\n\n\n\n\nfunction TodoForm(props) {\n\n    console.log(props);\n\n    // const [Id, setId] = useState(null);\n    const [Id, setId] = useState(Math.floor(Math.random() * 10000));\n\n    const [sections, setSections] = useState(props.sections);\n\n    const [input, setInput] = useState(\"\");\n\n    const handleChange = (e) => {\n        setInput(e.target.value);\n    };\n\n    \n\n\n    const [inputDescription, setInputDescription] = useState(\"\");\n\n    const handleChangeDescription = (e) => {\n        setInputDescription(e.target.value);\n    };\n\n   \n\n    useEffect(() => {\n        console.log(\"useEffect Todo form\");\n        console.log(props);\n\n        console.log(props.editId);\n        console.log(props.todos);\n\n\n\n\n        if (props.editId == null) {\n            console.log('id = nullll');\n        } else {\n            console.log('id NOT nullll');\n            console.log(props.editId);\n\n            const result = props.todos.filter(todo => todo.id === props.editId);\n            console.dir(result);\n            console.log(result[0].id);\n    \n            console.log(result[0].text);\n            console.log(result[0].complete);\n            console.log(result[0].description);\n\n            setId(result[0].id);\n            setInput(result[0].text);\n            \n            setInputDescription(result[0].description);\n            \n        }\n\n        // setInput(e.target.value);\n        // setInputSection(e.target.value);\n\n        // const todos = JSON.parse(localStorage.getItem('todos'));\n        // if (todos) {\n        //     setTodos(todos);\n        // }\n    }, []);\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        // console.dir(e.target.parentNode[0][0].text);\n        console.log(props.editId);\n        console.log(props.todos);\n\n        if (props.editId == null) {\n            console.log('id = nullll');\n\n            props.onSubmit({\n                id: Id,\n                text: input,\n                complete: false,\n                description: inputDescription\n            });\n            setInput(\"\");\n            setInputDescription(\"\");\n\n            e.target.parentNode[0][0].selected = true;\n\n            props.onClickHide();\n\n        } else {\n            props.editTodo(Id, input, inputDescription);\n            props.setEdit();\n            props.onClickHide();\n        }\n\n\n    };\n\n    return (\n        <React.Fragment >\n            <p>{Id}</p>\n            \n\n            <form onSubmit={handleSubmit} noValidate autoComplete=\"off\" className={classes.paper}>\n                \n                   \n\n                <TextField id=\"standard-basic\" label=\"Standard\" />\n\n                <TextField\n                    id=\"outlined-multiline-static\"\n                    label=\"Multiline\"\n                    multiline\n                    rows={4}\n                    defaultValue=\"Default Value\"\n                    variant=\"outlined\"\n                />\n\n                   \n               \n\n\n\n                <button onClick={handleSubmit}>add todo</button>\n            </form>\n\n\n\n        </React.Fragment>\n\n    );\n}\n\nexport default TodoForm;\n"]},"metadata":{},"sourceType":"module"}