{"ast":null,"code":"var _jsxFileName = \"/Users/zim/WORK/GIT-REPOS/JAVASCRIPT/REACT/assets/SANDPIT/CRA/omni-todo-app/src/components/TodoList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport Todo from './Todo';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { Grid, Container, Box, Button, Modal, Backdrop, Fade } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n    minWidth: 600\n  },\n  listItemText: {\n    border: '2px solid red',\n    alignItems: 'left',\n    justifyContent: 'left'\n  },\n  todolist: {\n    width: '100%',\n    // maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    minWidth: 600\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    minWidth: '60%'\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  hide: {\n    display: 'none'\n  },\n  boxContainer: {\n    width: '100%',\n    // maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  box: {\n    border: '2px solid red',\n    width: '100%',\n    // maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nfunction TodoList() {\n  const classes = useStyles(); // useState hooks\n\n  const [checked, setChecked] = React.useState([1]);\n  const [todos, setTodos] = useState([]);\n  const [todosSelected, setTodosSelected] = useState([]); //Track is edit clicked or not\n\n  const [editId, setEdit] = useState(null);\n  const [inputValue, setInputValue] = useState(\"\"); // Set localStorage on initial mount\n\n  useEffect(() => {\n    console.log(\"use effect one\");\n    const todos = JSON.parse(localStorage.getItem('todos-omni'));\n\n    if (todos) {\n      setTodos(todos);\n    }\n  }, []); // update localStorage on data change\n\n  useEffect(() => {\n    console.log(\"use effect two\");\n    localStorage.setItem('todos-omni', JSON.stringify(todos));\n  }, [todos]); // console.log(todos);\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    console.log(\"const handleOpen = () => {\");\n    console.log(editId);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    console.log(\"const handleClose = () => {\");\n    setOpen(false);\n    setEdit(null);\n  }; // clsx experiment button\n\n\n  const [openClsx, setOpenClsx] = React.useState(false);\n\n  const handleOpenClsx = () => {\n    console.log(\"const handleOpenClsx = () => {\");\n    setOpenClsx(!openClsx);\n  };\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked]; // console.log(value);\n    // console.log(currentIndex);\n    // console.log(newChecked);\n\n    if (currentIndex === -1) {\n      console.log(\"currentIndex === -1\");\n      newChecked.push(value); // completeTodo(value);\n    } else {\n      console.log(\"Else currentIndex === -1\"); // completeTodo(value);\n\n      newChecked.splice(currentIndex, 1);\n    }\n\n    completeTodo(value);\n    setChecked(newChecked);\n  };\n\n  const handleEditChange = (id, text) => {\n    console.log(\"handle edit channngge\"); // console.log(id);\n    // console.log(text);\n\n    setEdit(id);\n    setInputValue(text);\n    handleOpen();\n    console.log(editId); // setModalShow(true);\n  };\n\n  const addTodo = todo => {\n    if (!todo.title || /^\\s*$/.test(todo.title)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n\n  const removeTodo = id => {\n    const removedArr = [...todos].filter(todoId => todoId.id !== id);\n    setTodos(removedArr);\n  };\n\n  const completeTodo = id => {\n    console.log(\"completeTodo\");\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.complete = !todo.complete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  const editTodo = (id, title, description, dueDate, complete) => {\n    console.log(\"const editTodo = (id, title, description, dueDate, complete) => {\");\n    let editTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.title = title;\n        todo.description = description;\n        todo.dueDate = dueDate;\n        todo.complete = complete;\n      }\n\n      return todo;\n    });\n    setTodos(editTodos);\n    setEdit(false);\n  };\n\n  const {\n    foo,\n    bar,\n    baz\n  } = classes;\n  const style = clsx(foo, bar, baz);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    \"aria-labelledby\": \"transition-modal-title\",\n    \"aria-describedby\": \"transition-modal-description\",\n    className: classes.modal,\n    open: open,\n    onClose: handleClose,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Fade, {\n    in: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TodoForm, {\n    onClose: handleClose,\n    onSubmit: addTodo,\n    todos: todos,\n    editId: editId,\n    editTodo: editTodo,\n    setEdit: setEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: (0, 0, 9, 0),\n    className: classes.boxContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  }, \"xs=12\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 21\n    }\n  }, \"xs=6\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  }, \"xs=6\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 21\n    }\n  }, \"xs=3\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 21\n    }\n  }, \"xs=6\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 21\n    }\n  }, \"xs=3\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 21\n    }\n  }, \"Create Todo\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleOpenClsx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 21\n    }\n  }, \"CLSX experiment\"), /*#__PURE__*/React.createElement(Box, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: clsx(classes.clsxBox1, openClsx && classes.hide),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 21\n    }\n  }, \"CLSX BOX experiment\"), todos.map((todo, index) => {\n    return /*#__PURE__*/React.createElement(Todo, {\n      key: index,\n      id: todo.id,\n      title: todo.title,\n      description: todo.description,\n      useDate: todo.useDate,\n      complete: todo.complete,\n      handleToggle: e => handleToggle(e),\n      checked: checked,\n      todos: todosSelected,\n      setTodos: setTodos,\n      completeTodo: completeTodo,\n      removeTodo: removeTodo,\n      editTodo: editTodo,\n      handleEditChange: handleEditChange,\n      editId: editId,\n      inputValue: inputValue,\n      setInputValue: setInputValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 29\n      }\n    });\n  }))));\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/zim/WORK/GIT-REPOS/JAVASCRIPT/REACT/assets/SANDPIT/CRA/omni-todo-app/src/components/TodoList.js"],"names":["React","useState","useEffect","TodoForm","Todo","makeStyles","clsx","Grid","Container","Box","Button","Modal","Backdrop","Fade","useStyles","theme","root","width","backgroundColor","palette","background","paper","minWidth","listItemText","border","alignItems","justifyContent","todolist","modal","display","menuButton","marginRight","spacing","hide","boxContainer","box","TodoList","classes","checked","setChecked","todos","setTodos","todosSelected","setTodosSelected","editId","setEdit","inputValue","setInputValue","console","log","JSON","parse","localStorage","getItem","setItem","stringify","open","setOpen","handleOpen","handleClose","openClsx","setOpenClsx","handleOpenClsx","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","completeTodo","handleEditChange","id","text","addTodo","todo","title","test","newTodos","removeTodo","removedArr","filter","todoId","updatedTodos","map","complete","editTodo","description","dueDate","editTodos","foo","bar","baz","style","timeout","clsxBox1","index","useDate","e"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport Todo from './Todo';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { Grid, Container, Box, Button, Modal, Backdrop, Fade } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n        minWidth: 600,\n    },\n    listItemText: {\n        border: '2px solid red',\n        alignItems: 'left',\n        justifyContent: 'left',\n    },\n    todolist: {\n        width: '100%',\n        // maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n        minWidth: 600,\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        minWidth: '60%',\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    boxContainer: {\n        width: '100%',\n        // maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    box: {\n        border: '2px solid red',\n        width: '100%',\n        // maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nfunction TodoList() {\n    const classes = useStyles();\n\n    // useState hooks\n    const [checked, setChecked] = React.useState([1]);\n    const [todos, setTodos] = useState([]);\n\n    const [todosSelected, setTodosSelected] = useState([]);\n    //Track is edit clicked or not\n    const [editId, setEdit] = useState(null);\n\n    const [inputValue, setInputValue] = useState(\"\");\n\n    // Set localStorage on initial mount\n    useEffect(() => {\n        console.log(\"use effect one\");\n\n        const todos = JSON.parse(localStorage.getItem('todos-omni'));\n        if (todos) {\n            setTodos(todos);\n        }\n    }, []);\n\n    // update localStorage on data change\n    useEffect(() => {\n        console.log(\"use effect two\");\n\n        localStorage.setItem('todos-omni', JSON.stringify(todos));\n    }, [todos]);\n\n    // console.log(todos);\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n        console.log(\"const handleOpen = () => {\");\n\n        console.log(editId);\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        console.log(\"const handleClose = () => {\");\n        setOpen(false);\n        setEdit(null);\n    };\n\n    // clsx experiment button\n    const [openClsx, setOpenClsx] = React.useState(false);\n\n    const handleOpenClsx = () => {\n        console.log(\"const handleOpenClsx = () => {\");\n        setOpenClsx(!openClsx);\n    };\n\n    const handleToggle = (value) => () => {\n\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        // console.log(value);\n        // console.log(currentIndex);\n        // console.log(newChecked);\n\n\n        if (currentIndex === -1) {\n            console.log(\"currentIndex === -1\");\n            newChecked.push(value);\n            // completeTodo(value);\n        } else {\n            console.log(\"Else currentIndex === -1\");\n            // completeTodo(value);\n            newChecked.splice(currentIndex, 1);\n        }\n\n        completeTodo(value);\n        setChecked(newChecked);\n    };\n\n    const handleEditChange = (id, text) => {\n        console.log(\"handle edit channngge\");\n        // console.log(id);\n        // console.log(text);\n\n        setEdit(id);\n        setInputValue(text);\n        handleOpen();\n\n        console.log(editId);\n        // setModalShow(true);\n    };\n\n    const addTodo = (todo) => {\n        if (!todo.title || /^\\s*$/.test(todo.title)) {\n            return;\n        }\n\n        const newTodos = [todo, ...todos];\n        setTodos(newTodos);\n    };\n\n    const removeTodo = (id) => {\n        const removedArr = [...todos].filter((todoId) => todoId.id !== id);\n\n        setTodos(removedArr);\n    };\n\n    const completeTodo = (id) => {\n        console.log(\"completeTodo\");\n        let updatedTodos = todos.map((todo) => {\n            if (todo.id === id) {\n                todo.complete = !todo.complete;\n            }\n            return todo;\n        });\n        setTodos(updatedTodos);\n    };\n\n    const editTodo = (id, title, description, dueDate, complete) => {\n        console.log(\"const editTodo = (id, title, description, dueDate, complete) => {\");\n\n        let editTodos = todos.map((todo) => {\n            if (todo.id === id) {\n                todo.title = title;\n                todo.description = description;\n                todo.dueDate = dueDate;\n                todo.complete = complete;\n            }\n            return todo;\n        });\n        setTodos(editTodos);\n        setEdit(false);\n    };\n\n\n    const { foo, bar, baz } = classes;\n    const style = clsx(foo, bar, baz);\n\n    return (\n        <React.Fragment>\n\n\n\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <div className={classes.modal}>\n                        <TodoForm onClose={handleClose} onSubmit={addTodo} todos={todos} editId={editId} editTodo={editTodo} setEdit={setEdit} />\n                    </div>\n                </Fade>\n            </Modal>\n\n            <Grid container spacing={(0,0,9,0)} className={classes.boxContainer}>\n                \n                <Grid item xs={12}>\n                    <Box className={classes.box}>xs=12</Box>\n                </Grid>\n                <Grid item xs={6}>\n                    <Box className={classes.box}>xs=6</Box>\n                </Grid>\n                <Grid item xs={6}>\n                    <Box className={classes.box}>xs=6</Box>\n                </Grid>\n                <Grid item xs={3}>\n                    <Box className={classes.box}>xs=3</Box>\n                </Grid>\n                <Grid item xs={6}>\n                    <Box className={classes.box}>xs=6</Box>\n                </Grid>\n                <Grid item xs={3}>\n                    <Box className={classes.box}>xs=3</Box>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleOpen}>\n                        Create Todo\n                    </Button>\n\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleOpenClsx}>\n                        CLSX experiment\n                    </Button>\n\n                    <Box variant=\"contained\" color=\"primary\" className={clsx(classes.clsxBox1, openClsx && classes.hide)}>\n                        CLSX BOX experiment\n                    </Box>\n\n\n\n                    {todos.map((todo, index) => {\n\n                        return (\n\n                            <Todo\n                                key={index}\n                                id={todo.id}\n                                title={todo.title}\n                                description={todo.description}\n                                useDate={todo.useDate}\n                                complete={todo.complete}\n                                handleToggle={(e) => handleToggle(e)}\n                                checked={checked}\n                                todos={todosSelected}\n                                setTodos={setTodos}\n                                completeTodo={completeTodo}\n                                removeTodo={removeTodo}\n                                editTodo={editTodo}\n                                handleEditChange={handleEditChange}\n                                editId={editId}\n                                inputValue={inputValue}\n                                setInputValue={setInputValue}\n                            />\n\n                        );\n                    })}\n                </Grid>\n\n            </Grid>\n\n\n\n        </React.Fragment>\n\n    );\n}\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}