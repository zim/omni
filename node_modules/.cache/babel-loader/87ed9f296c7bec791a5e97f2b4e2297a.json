{"ast":null,"code":"var _jsxFileName = \"/Users/zim/WORK/GIT-REPOS/JAVASCRIPT/REACT/assets/SANDPIT/CRA/omni-todo-app/src/components/TodoList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport Todo from './Todo';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { Grid, Container, Box, Button, Modal, Backdrop, Fade, Typography } from '@material-ui/core'; // cloud name dg8ckygz0\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n    minWidth: 600,\n    margin: '0px!important'\n  },\n  listItemText: {\n    border: '2px solid red',\n    alignItems: 'left',\n    justifyContent: 'left'\n  },\n  todolist: {\n    width: '100%',\n    // maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    minWidth: 600\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    minWidth: '60%',\n    outline: 'none'\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  hide: {\n    display: 'none'\n  },\n  boxContainer: {\n    width: '100%',\n    // maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    margin: '0px!important'\n  },\n  box: {\n    width: '100%',\n    // maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  grid: {}\n}));\n\nfunction TodoList() {\n  const classes = useStyles(); // useState hooks\n\n  const [checked, setChecked] = React.useState([1]);\n  const [todos, setTodos] = useState([]);\n  const [todosEmptyBool, setTodosEmptyBool] = useState(true);\n  const [todosSelected, setTodosSelected] = useState([]); //Track is edit clicked or not\n\n  const [editId, setEdit] = useState(null);\n  const [inputValue, setInputValue] = useState(\"\"); // Set localStorage on initial mount\n\n  useEffect(() => {\n    // console.log(\"use effect one\");\n    const todos = JSON.parse(localStorage.getItem('todos-omni-dev1'));\n\n    if (todos) {\n      setTodos(todos); // setTodosEmptyBool(false);\n    }\n  }, []); // update localStorage on data change\n\n  useEffect(() => {\n    // console.log(\"use effect two\");\n    // console.log(todos.length);\n    if (todos.length == 0) {\n      setTodosEmptyBool(!todosEmptyBool);\n    }\n\n    localStorage.setItem('todos-omni-dev1', JSON.stringify(todos));\n  }, [todos]); // console.log(todos);\n\n  const [dev, setDev] = React.useState(true);\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    // console.log(\"const handleOpen = () => {\");\n    // console.log(editId);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    // console.log(\"const handleClose = () => {\");\n    setOpen(false);\n    setEdit(null);\n  }; // clsx experiment button\n\n\n  const [openClsx, setOpenClsx] = React.useState(false);\n\n  const handleOpenClsx = () => {\n    // console.log(\"const handleOpenClsx = () => {\");\n    setOpenClsx(!openClsx);\n  };\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    completeTodo(value);\n    setChecked(newChecked);\n  };\n\n  const handleEditChange = (id, text) => {\n    console.log(\"handle edit channngge\");\n    setEdit(id);\n    setInputValue(text);\n    handleOpen();\n  };\n\n  const addTodo = todo => {\n    if (!todo.title || /^\\s*$/.test(todo.title)) {\n      return;\n    } // console.log(todos.length);\n\n\n    if (todos.length == 0) {\n      setTodosEmptyBool(!todosEmptyBool);\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n\n  const removeTodo = id => {\n    const removedArr = [...todos].filter(todoId => todoId.id !== id);\n    setTodos(removedArr);\n  };\n\n  const completeTodo = id => {\n    // console.log(\"completeTodo\");\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.complete = !todo.complete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  const editTodo = (id, title, description, dueDate, complete, imagePath) => {\n    console.log(\"const editTodo = (id, title, description, dueDate, complete) => {\");\n    let editTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.title = title;\n        todo.description = description;\n        todo.dueDate = dueDate;\n        todo.complete = complete;\n        todo.imagePath = imagePath;\n      }\n\n      return todo;\n    });\n    setTodos(editTodos);\n    setEdit(false);\n  };\n\n  const {\n    foo,\n    bar,\n    baz\n  } = classes;\n  const style = clsx(foo, bar, baz);\n  const [errorFetch, setErrorFetch] = useState(false);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    \"aria-labelledby\": \"transition-modal-title\",\n    \"aria-describedby\": \"transition-modal-description\",\n    className: classes.modal,\n    open: open,\n    onClose: handleClose,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Fade, {\n    in: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TodoForm, {\n    onClose: handleClose,\n    onSubmit: addTodo,\n    todos: todos,\n    editId: editId,\n    editTodo: editTodo,\n    setEdit: setEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    className: classes.boxContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: clsx(classes.grid, dev && classes.hide),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }\n  }, \"xs=12\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    className: clsx(dev && classes.hide),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 21\n    }\n  }, \"xs=6\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    className: clsx(dev && classes.hide),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 21\n    }\n  }, \"xs=6\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 21\n    }\n  }, \"xs=3\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 21\n    }\n  }, \"xs=3\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 21\n    }\n  }, \"xs=3\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 21\n    }\n  }, \"xs=3\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 25\n    }\n  }, \"Todo App\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    className: clsx(!errorFetch && classes.hide),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 25\n    }\n  }, \"For this Todo List app to work you have to start the dev server that is in the root of this project. This is because I went down the path of hosting uploaded images to cloudinary.com a free hosting sservice that I discovered.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 29\n    }\n  }), \"Server: The easiest way to get started with storing images is to have a third party host the images and we just use a string url reference to that image to display it in the application. Cloudinary is a great service that provides a generous amount of storage and transfer on their free plan. Go ahead and sign up to get your api keys. After signing up for Cloudinary we need to plug those keys into a .env file on the server. If you need a little help with that, please read this. All set up? Time to get into the server code.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 29\n    }\n  }), \"I'm sure there is a simpler way to implement the this functionality, that does not involve having to set up server in this way? But once I had started I did continue. I hope that is ok.\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    className: clsx(!errorFetch && classes.hide),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 25\n    }\n  }, \"Once the dev server is running you will not see this message again and the 'CREATE TODO' button below will activate. Full instructions can be found on the About page. and the readme doc in github repo\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(!todosEmptyBool && classes.hide),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 53\n    }\n  }, \"You do not have any Todo items at the moment.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 29\n    }\n  })), \"Click the 'CREATE TODO' button below to add todo item.\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleOpen,\n    disabled: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 25\n    }\n  }, \"Create Todo\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 17\n    }\n  }, todos.map((todo, index) => {\n    return /*#__PURE__*/React.createElement(Todo, {\n      key: index,\n      id: todo.id,\n      title: todo.title,\n      description: todo.description,\n      dueDate: todo.dueDate,\n      complete: todo.complete,\n      imagePath: todo.imagePath,\n      handleToggle: e => handleToggle(e),\n      checked: checked,\n      todos: todosSelected,\n      setTodos: setTodos,\n      completeTodo: completeTodo,\n      removeTodo: removeTodo,\n      editTodo: editTodo,\n      handleEditChange: handleEditChange,\n      editId: editId,\n      inputValue: inputValue,\n      setInputValue: setInputValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 29\n      }\n    });\n  }))));\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/zim/WORK/GIT-REPOS/JAVASCRIPT/REACT/assets/SANDPIT/CRA/omni-todo-app/src/components/TodoList.js"],"names":["React","useState","useEffect","TodoForm","Todo","makeStyles","clsx","Grid","Container","Box","Button","Modal","Backdrop","Fade","Typography","useStyles","theme","root","width","backgroundColor","palette","background","paper","minWidth","margin","listItemText","border","alignItems","justifyContent","todolist","modal","display","outline","menuButton","marginRight","spacing","hide","boxContainer","box","grid","TodoList","classes","checked","setChecked","todos","setTodos","todosEmptyBool","setTodosEmptyBool","todosSelected","setTodosSelected","editId","setEdit","inputValue","setInputValue","JSON","parse","localStorage","getItem","length","setItem","stringify","dev","setDev","open","setOpen","handleOpen","handleClose","openClsx","setOpenClsx","handleOpenClsx","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","completeTodo","handleEditChange","id","text","console","log","addTodo","todo","title","test","newTodos","removeTodo","removedArr","filter","todoId","updatedTodos","map","complete","editTodo","description","dueDate","imagePath","editTodos","foo","bar","baz","style","errorFetch","setErrorFetch","timeout","index","e"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport Todo from './Todo';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { Grid, Container, Box, Button, Modal, Backdrop, Fade, Typography } from '@material-ui/core';\n\n// cloud name dg8ckygz0\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n        minWidth: 600,\n        margin: '0px!important',\n    },\n    listItemText: {\n        border: '2px solid red',\n        alignItems: 'left',\n        justifyContent: 'left',\n    },\n    todolist: {\n        width: '100%',\n        // maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n        minWidth: 600,\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        minWidth: '60%',\n        outline: 'none',\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    boxContainer: {\n        width: '100%',\n        // maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n        margin: '0px!important',\n    },\n    box: {\n        width: '100%',\n        // maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    grid: {\n\n    },\n}));\n\nfunction TodoList() {\n    const classes = useStyles();\n\n    // useState hooks\n    const [checked, setChecked] = React.useState([1]);\n    const [todos, setTodos] = useState([]);\n    const [todosEmptyBool, setTodosEmptyBool] = useState(true);\n\n    const [todosSelected, setTodosSelected] = useState([]);\n    //Track is edit clicked or not\n    const [editId, setEdit] = useState(null);\n\n    const [inputValue, setInputValue] = useState(\"\");\n\n    // Set localStorage on initial mount\n    useEffect(() => {\n        // console.log(\"use effect one\");\n\n        const todos = JSON.parse(localStorage.getItem('todos-omni-dev1'));\n        if (todos) {\n            setTodos(todos);\n            // setTodosEmptyBool(false);\n        }\n    }, []);\n\n    // update localStorage on data change\n    useEffect(() => {\n        // console.log(\"use effect two\");\n        // console.log(todos.length);\n\n        if(todos.length==0){\n            setTodosEmptyBool(!todosEmptyBool);\n        }\n\n        localStorage.setItem('todos-omni-dev1', JSON.stringify(todos));\n        \n    }, [todos]);\n\n    // console.log(todos);\n\n    const [dev, setDev] = React.useState(true);\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n        // console.log(\"const handleOpen = () => {\");\n\n        // console.log(editId);\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        // console.log(\"const handleClose = () => {\");\n        setOpen(false);\n        setEdit(null);\n    };\n\n    // clsx experiment button\n    const [openClsx, setOpenClsx] = React.useState(false);\n\n    const handleOpenClsx = () => {\n        // console.log(\"const handleOpenClsx = () => {\");\n        setOpenClsx(!openClsx);\n    };\n\n    const handleToggle = (value) => () => {\n\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        completeTodo(value);\n        setChecked(newChecked);\n    };\n\n    const handleEditChange = (id, text) => {\n        console.log(\"handle edit channngge\");\n\n        setEdit(id);\n        setInputValue(text);\n        handleOpen();\n    };\n\n    const addTodo = (todo) => {\n        if (!todo.title || /^\\s*$/.test(todo.title)) {\n            return;\n        }\n\n        // console.log(todos.length);\n        if (todos.length == 0) {\n            setTodosEmptyBool(!todosEmptyBool);\n        }\n\n        const newTodos = [todo, ...todos];\n        setTodos(newTodos);\n        \n    };\n\n    const removeTodo = (id) => {\n        const removedArr = [...todos].filter((todoId) => todoId.id !== id);\n\n        setTodos(removedArr);\n    };\n\n    const completeTodo = (id) => {\n        // console.log(\"completeTodo\");\n        let updatedTodos = todos.map((todo) => {\n            if (todo.id === id) {\n                todo.complete = !todo.complete;\n            }\n            return todo;\n        });\n        setTodos(updatedTodos);\n    };\n\n    const editTodo = (id, title, description, dueDate, complete, imagePath) => {\n        console.log(\"const editTodo = (id, title, description, dueDate, complete) => {\");\n\n        let editTodos = todos.map((todo) => {\n            if (todo.id === id) {\n                todo.title = title;\n                todo.description = description;\n                todo.dueDate = dueDate;\n                todo.complete = complete;\n                todo.imagePath = imagePath;\n            }\n            return todo;\n        });\n        setTodos(editTodos);\n        setEdit(false);\n    };\n\n\n    const { foo, bar, baz } = classes;\n    const style = clsx(foo, bar, baz);\n\n    const [errorFetch, setErrorFetch] = useState(false);\n\n    return (\n        <React.Fragment>\n\n\n\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <div className={classes.modal}>\n                        <TodoForm onClose={handleClose} onSubmit={addTodo} todos={todos} editId={editId} editTodo={editTodo} setEdit={setEdit} />\n                    </div>\n                </Fade>\n            </Modal>\n\n            <Grid container spacing={3} className={classes.boxContainer}>\n\n                <Grid item xs={12} className={clsx(classes.grid, dev && classes.hide)}>\n                    <Box className={classes.box}>xs=12</Box>\n                </Grid>\n                <Grid item xs={6} className={clsx(dev && classes.hide)}>\n                    <Box className={classes.box}>xs=6</Box>\n                </Grid>\n                <Grid item xs={6} className={clsx(dev && classes.hide)}>\n                    <Box className={classes.box}>xs=6</Box>\n                </Grid>\n\n                <Grid item xs={3}>\n                    <Box className={classes.box}>xs=3</Box>\n                </Grid>\n\n                <Grid item xs={3}>\n                    <Box className={classes.box}>xs=3</Box>\n                </Grid>\n\n                <Grid item xs={3}>\n                    <Box className={classes.box}>xs=3</Box>\n                </Grid>\n\n                <Grid item xs={3}>\n                    <Box className={classes.box}>xs=3</Box>\n                </Grid>\n\n                <Grid item xs={12} className={classes.grid}>\n                    <Box className={classes.box}>\n                        <Typography variant=\"h3\">Todo App</Typography>\n                        <Typography variant=\"h5\" className={clsx(!errorFetch && classes.hide)}>For this Todo List app to work you have to start the dev server that is in the root of this project. This is because I went down the path of hosting uploaded images to cloudinary.com a free hosting sservice that I discovered.\n                            <br />\n                            Server:\nThe easiest way to get started with storing images is to have a third party host the images and we just use a string url reference to that image to display it in the application. Cloudinary is a great service that provides a generous amount of storage and transfer on their free plan. Go ahead and sign up to get your api keys.\nAfter signing up for Cloudinary we need to plug those keys into a .env file on the server. If you need a little help with that, please read this.\nAll set up? Time to get into the server code.\n                            <br />\n                            I'm sure there is a simpler way to implement the this functionality, that does not involve having to set up server in this way? But once I had started I did continue. I hope that is ok.</Typography>\n                        <Typography variant=\"h5\" className={clsx(!errorFetch && classes.hide)}>Once the dev server is running you will not see this message again and the 'CREATE TODO' button below will activate. Full instructions can be found on the About page. and the readme doc in github repo</Typography>\n                        <Typography variant=\"body1\"><span className={clsx(!todosEmptyBool && classes.hide)}>You do not have any Todo items at the moment.\n                            <br /></span>\n                            Click the 'CREATE TODO' button below to add todo item.</Typography>\n                    </Box>\n                </Grid>\n                \n\n                <Grid item xs={12}>\n                    <Box className={classes.box}>\n\n                        <Button variant=\"contained\" color=\"primary\" onClick={handleOpen} disabled={false}>\n                            Create Todo\n                        </Button>\n                        \n                    </Box>\n                </Grid>\n\n                <Grid item xs={12}>\n\n\n                    {todos.map((todo, index) => {\n\n                        return (\n\n                            <Todo\n                                key={index}\n                                id={todo.id}\n                                title={todo.title}\n                                description={todo.description}\n                                dueDate={todo.dueDate}\n                                complete={todo.complete}\n                                imagePath={todo.imagePath}\n                                handleToggle={(e) => handleToggle(e)}\n                                checked={checked}\n                                todos={todosSelected}\n                                setTodos={setTodos}\n                                completeTodo={completeTodo}\n                                removeTodo={removeTodo}\n                                editTodo={editTodo}\n                                handleEditChange={handleEditChange}\n                                editId={editId}\n                                inputValue={inputValue}\n                                setInputValue={setInputValue}\n                            />\n\n                        );\n                    })}\n                </Grid>\n\n            </Grid>\n\n        </React.Fragment>\n\n    );\n}\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}