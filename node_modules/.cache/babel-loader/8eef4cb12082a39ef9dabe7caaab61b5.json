{"ast":null,"code":"var _jsxFileName = \"/Users/zim/WORK/GIT-REPOS/JAVASCRIPT/REACT/assets/SANDPIT/CRA/omni-todo-app/src/components/Todo.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { Card, CardContent, CardActions, Typography, Checkbox, Button, Paper } from '@material-ui/core'; // import { IconButton, FavoriteIcon, ShareIcon } from '@material-ui/icons';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // width: '100%',\n    // maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    // minWidth: 600,\n    margin: theme.spacing(2, 0),\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  flexit: {\n    display: 'flex'\n  },\n  foo: props => ({\n    backgroundColor: props.backgroundColor\n  }),\n  bar: {\n    // CSS property\n    color: props => props.color\n  },\n  todoComplete: {\n    backgroundColor: '#4e493466'\n  },\n  checkbox: {\n    margin: '2px 9px 0px 0px'\n  }\n}));\n\nconst Todo = ({\n  id,\n  title,\n  description,\n  dueDate,\n  complete,\n  handleToggle,\n  checked,\n  todos,\n  setTodos,\n  completeTodo,\n  removeTodo,\n  editTodo,\n  editId,\n  handleEditChange,\n  inputValue,\n  setInputValue\n}) => {\n  // console.log(props);\n  // const classes = useStyles();\n  // Simulated props for the purpose of the example\n  const props = {\n    backgroundColor: 'black',\n    color: 'white'\n  }; // Pass the props as the first argument of useStyles()\n\n  const classes = useStyles(props);\n  return /*#__PURE__*/React.createElement(Card, {\n    key: id,\n    className: classes.root,\n    className: clsx(classes.root, complete && classes.todoComplete),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    className: title,\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, title), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, description)), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.flexit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, dueDate), /*#__PURE__*/React.createElement(Checkbox, {\n    edge: \"end\",\n    onChange: handleToggle(id),\n    checked: complete,\n    className: classes.checkbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"add to favorites\",\n    onClick: () => removeTodo(id, title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"add to favorites\",\n    onClick: () => handleEditChange(id, title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }))));\n};\n\nexport default Todo;","map":{"version":3,"sources":["/Users/zim/WORK/GIT-REPOS/JAVASCRIPT/REACT/assets/SANDPIT/CRA/omni-todo-app/src/components/Todo.js"],"names":["React","useState","useEffect","makeStyles","clsx","Card","CardContent","CardActions","Typography","Checkbox","Button","Paper","IconButton","FavoriteIcon","EditIcon","DeleteIcon","ShareIcon","ExpandMoreIcon","MoreVertIcon","useStyles","theme","root","backgroundColor","palette","background","paper","margin","spacing","display","justifyContent","flexit","foo","props","bar","color","todoComplete","checkbox","Todo","id","title","description","dueDate","complete","handleToggle","checked","todos","setTodos","completeTodo","removeTodo","editTodo","editId","handleEditChange","inputValue","setInputValue","classes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { Card, CardContent, CardActions, Typography, Checkbox, Button, Paper } from '@material-ui/core';\n// import { IconButton, FavoriteIcon, ShareIcon } from '@material-ui/icons';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // width: '100%',\n        // maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n        // minWidth: 600,\n        margin: theme.spacing(2, 0),\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    flexit: {\n        display: 'flex',\n    },\n    foo: props => ({\n        backgroundColor: props.backgroundColor,\n    }),\n    bar: {\n        // CSS property\n        color: props => props.color,\n    },\n    todoComplete: {\n        backgroundColor: '#4e493466',\n    },\n    checkbox: {\n        \n        margin: '2px 9px 0px 0px',\n    },\n}));\n\nconst Todo =\n\n    ({\n        id,\n        title,\n        description,\n        dueDate,\n        complete,\n        handleToggle,\n        checked,\n        todos,\n        setTodos,\n        completeTodo,\n        removeTodo,\n        editTodo,\n        editId,\n        handleEditChange,\n        inputValue,\n        setInputValue\n    }) => {\n        // console.log(props);\n        // const classes = useStyles();\n        // Simulated props for the purpose of the example\n        const props = { backgroundColor: 'black', color: 'white' };\n        // Pass the props as the first argument of useStyles()\n        const classes = useStyles(props);\n\n        \n\n\n        return (\n\n            <Card key={id} className={classes.root} className={clsx(classes.root, complete && classes.todoComplete)}>\n                <CardContent>\n\n                    <Typography variant=\"h5\" className={title} color=\"textSecondary\" gutterBottom>\n                        {title}\n                    </Typography>\n                    <Typography variant=\"body1\" component=\"p\">\n                        {description}\n                    </Typography>\n                </CardContent>\n                <CardContent className={classes.flexit}>\n                    <Typography color=\"textSecondary\">\n                        {dueDate}\n                    </Typography>\n                    \n                    <Checkbox\n                        edge=\"end\"\n                        onChange={handleToggle(id)}\n                        checked={complete}\n                        className={classes.checkbox}\n                    />\n\n                    <IconButton aria-label=\"add to favorites\" onClick={() => removeTodo(id, title)}>\n                        <DeleteIcon />\n                    </IconButton>\n                    <IconButton aria-label=\"add to favorites\" onClick={() => handleEditChange(id, title)}>\n                        <EditIcon />\n                    </IconButton>\n\n                </CardContent>\n\n            </Card>\n\n        );\n    }\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}