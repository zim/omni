{"ast":null,"code":"var _jsxFileName = \"/Users/zim/WORK/GIT-REPOS/JAVASCRIPT/REACT/assets/SANDPIT/CRA/omni-todo-app/src/components/TodoForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3)\n  },\n  textField: {\n    width: '25ch'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nfunction TodoForm(props) {\n  console.log(props);\n  const classes = useStyles(); // const [Id, setId] = useState(null);\n\n  const [Id, setId] = useState(Math.floor(Math.random() * 10000));\n  const [inputTitle, setInputTitle] = useState(\"\");\n\n  const handleChangeTitle = e => {\n    console.log(e.target.value);\n    setInputTitle(e.target.value);\n  };\n\n  const [inputDescription, setInputDescription] = useState(\"\");\n\n  const handleChangeDescription = e => {\n    console.log(e.target.value);\n    setInputDescription(e.target.value);\n  };\n\n  useEffect(() => {\n    console.log(\"useEffect Todo form\");\n    console.log(props);\n    console.log(props.editId);\n    console.log(props.todos);\n\n    if (props.editId == null) {\n      console.log('id = nullll');\n    } else {\n      console.log('id NOT nullll');\n      console.log(props.editId);\n      const result = props.todos.filter(todo => todo.id === props.editId);\n      console.dir(result);\n      console.log(result[0].id);\n      console.log(result[0].text);\n      console.log(result[0].complete);\n      console.log(result[0].description);\n      setId(result[0].id);\n      setInputTitle(result[0].text);\n      setInputDescription(result[0].description);\n    } // setInput(e.target.value);\n    // setInputSection(e.target.value);\n    // const todos = JSON.parse(localStorage.getItem('todos'));\n    // if (todos) {\n    //     setTodos(todos);\n    // }\n\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault(); // console.dir(e.target.parentNode[0][0].text);\n\n    console.log(props.editId);\n    console.log(props.todos); // if (props.editId == null) {\n    //     console.log('id = nullll');\n    //     props.onSubmit({\n    //         id: Id,\n    //         text: input,\n    //         complete: false,\n    //         description: inputDescription\n    //     });\n    //     setInput(\"\");\n    //     setInputDescription(\"\");\n    //     e.target.parentNode[0][0].selected = true;\n    //     props.onClickHide();\n    // } else {\n    //     props.editTodo(Id, input, inputDescription);\n    //     props.setEdit();\n    //     props.onClickHide();\n    // }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, Id), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    noValidate: true,\n    autoComplete: \"off\",\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, \"Add Todo Form\"), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"input-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"input-title\",\n    placeholder: \"Title\",\n    fullWidth: true,\n    margin: \"normal\",\n    variant: \"outlined\",\n    value: inputTitle,\n    onChange: handleChangeTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"input-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"input-description\",\n    fullWidth: true,\n    margin: \"normal\",\n    multiline: true,\n    onChange: handleChangeDescription,\n    placeholder: \"Description\",\n    rows: 3,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"input-due-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 21\n    }\n  }, \"Due Date\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"input-due-date\",\n    type: \"date\",\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"complete\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 34\n      }\n    }),\n    label: \"Complete\",\n    labelPlacement: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, \"add todo\"))));\n}\n\nexport default TodoForm;","map":{"version":3,"sources":["/Users/zim/WORK/GIT-REPOS/JAVASCRIPT/REACT/assets/SANDPIT/CRA/omni-todo-app/src/components/TodoForm.js"],"names":["React","useState","useEffect","makeStyles","Button","IconButton","Input","FilledInput","OutlinedInput","InputLabel","InputAdornment","FormHelperText","FormControl","TextField","Visibility","VisibilityOff","Checkbox","FormGroup","FormControlLabel","FormLabel","useStyles","theme","root","display","flexWrap","margin","spacing","withoutLabel","marginTop","textField","width","modal","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","TodoForm","props","console","log","classes","Id","setId","Math","floor","random","inputTitle","setInputTitle","handleChangeTitle","e","target","value","inputDescription","setInputDescription","handleChangeDescription","editId","todos","result","filter","todo","id","dir","text","complete","description","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    margin: {\n        margin: theme.spacing(1),\n    },\n    withoutLabel: {\n        marginTop: theme.spacing(3),\n    },\n    textField: {\n        width: '25ch',\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\n\nfunction TodoForm(props) {\n\n    console.log(props);\n    const classes = useStyles();\n\n    // const [Id, setId] = useState(null);\n    const [Id, setId] = useState(Math.floor(Math.random() * 10000));\n\n    const [inputTitle, setInputTitle] = useState(\"\");\n\n    const handleChangeTitle = (e) => {\n        console.log(e.target.value);\n        setInputTitle(e.target.value);\n    };\n    \n    const [inputDescription, setInputDescription] = useState(\"\");\n    \n    const handleChangeDescription = (e) => {\n        console.log(e.target.value);\n        setInputDescription(e.target.value);\n    };\n\n\n\n    useEffect(() => {\n        console.log(\"useEffect Todo form\");\n        console.log(props);\n\n        console.log(props.editId);\n        console.log(props.todos);\n\n\n\n\n        if (props.editId == null) {\n            console.log('id = nullll');\n        } else {\n            console.log('id NOT nullll');\n            console.log(props.editId);\n\n            const result = props.todos.filter(todo => todo.id === props.editId);\n            console.dir(result);\n            console.log(result[0].id);\n\n            console.log(result[0].text);\n            console.log(result[0].complete);\n            console.log(result[0].description);\n\n            setId(result[0].id);\n            setInputTitle(result[0].text);\n\n            setInputDescription(result[0].description);\n\n        }\n\n        // setInput(e.target.value);\n        // setInputSection(e.target.value);\n\n        // const todos = JSON.parse(localStorage.getItem('todos'));\n        // if (todos) {\n        //     setTodos(todos);\n        // }\n    }, []);\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        // console.dir(e.target.parentNode[0][0].text);\n        console.log(props.editId);\n        console.log(props.todos);\n\n        // if (props.editId == null) {\n        //     console.log('id = nullll');\n\n        //     props.onSubmit({\n        //         id: Id,\n        //         text: input,\n        //         complete: false,\n        //         description: inputDescription\n        //     });\n        //     setInput(\"\");\n        //     setInputDescription(\"\");\n\n        //     e.target.parentNode[0][0].selected = true;\n\n        //     props.onClickHide();\n\n        // } else {\n        //     props.editTodo(Id, input, inputDescription);\n        //     props.setEdit();\n        //     props.onClickHide();\n        // }\n\n\n    };\n\n    return (\n        <React.Fragment >\n            <p>{Id}</p>\n\n\n            <form onSubmit={handleSubmit} noValidate autoComplete=\"off\" className={classes.paper}>\n\n                <FormLabel component=\"legend\">Add Todo Form</FormLabel>\n\n                <FormGroup>\n\n\n                    <InputLabel htmlFor=\"input-title\">Title</InputLabel>\n                    <TextField\n                        id=\"input-title\"\n\n\n                        placeholder=\"Title\"\n                        fullWidth\n                        margin=\"normal\"\n\n                        variant=\"outlined\"\n\n                        value={inputTitle}\n                        onChange={handleChangeTitle}\n                    />\n\n                    <InputLabel htmlFor=\"input-description\">Description</InputLabel>\n                    <TextField\n                        id=\"input-description\"\n                        fullWidth\n                        margin=\"normal\"\n                        multiline={true}\n                        onChange={handleChangeDescription}\n                        placeholder=\"Description\"\n                        rows={3}\n                        variant=\"outlined\"\n                    />\n\n                    <InputLabel htmlFor=\"input-due-date\">Due Date</InputLabel>\n                    <TextField\n                        id=\"input-due-date\"\n                        \n                        type=\"date\"\n                        margin=\"normal\"\n                    />\n\n                    <FormControlLabel\n                        value=\"complete\"\n                        control={<Checkbox color=\"primary\" />}\n                        label=\"Complete\"\n                        labelPlacement=\"start\"\n                    />\n\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>add todo</Button>\n\n                </FormGroup>\n\n            </form>\n\n\n\n        </React.Fragment>\n\n    );\n}\n\nexport default TodoForm;\n"]},"metadata":{},"sourceType":"module"}