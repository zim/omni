{"ast":null,"code":"var _jsxFileName = \"/Users/zim/WORK/GIT-REPOS/JAVASCRIPT/REACT/assets/SANDPIT/CRA/omni-todo-app/src/components/TodoForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3)\n  },\n  textField: {\n    width: '25ch'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nfunction TodoForm(props) {\n  console.log(props);\n  const classes = useStyles(); // const [Id, setId] = useState(null);\n\n  const [Id, setId] = useState(Math.floor(Math.random() * 10000));\n  const [sections, setSections] = useState(props.sections);\n  const [input, setInput] = useState(\"\");\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const [inputDescription, setInputDescription] = useState(\"\");\n\n  const handleChangeDescription = e => {\n    setInputDescription(e.target.value);\n  };\n\n  useEffect(() => {\n    console.log(\"useEffect Todo form\");\n    console.log(props);\n    console.log(props.editId);\n    console.log(props.todos);\n\n    if (props.editId == null) {\n      console.log('id = nullll');\n    } else {\n      console.log('id NOT nullll');\n      console.log(props.editId);\n      const result = props.todos.filter(todo => todo.id === props.editId);\n      console.dir(result);\n      console.log(result[0].id);\n      console.log(result[0].text);\n      console.log(result[0].complete);\n      console.log(result[0].description);\n      setId(result[0].id);\n      setInput(result[0].text);\n      setInputDescription(result[0].description);\n    } // setInput(e.target.value);\n    // setInputSection(e.target.value);\n    // const todos = JSON.parse(localStorage.getItem('todos'));\n    // if (todos) {\n    //     setTodos(todos);\n    // }\n\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault(); // console.dir(e.target.parentNode[0][0].text);\n\n    console.log(props.editId);\n    console.log(props.todos);\n\n    if (props.editId == null) {\n      console.log('id = nullll');\n      props.onSubmit({\n        id: Id,\n        text: input,\n        complete: false,\n        description: inputDescription\n      });\n      setInput(\"\");\n      setInputDescription(\"\");\n      e.target.parentNode[0][0].selected = true;\n      props.onClickHide();\n    } else {\n      props.editTodo(Id, input, inputDescription);\n      props.setEdit();\n      props.onClickHide();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, Id), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    noValidate: true,\n    autoComplete: \"off\",\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"my-input-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, \"Email address\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"input-description\",\n    placeholder: \"Description\",\n    fullWidth: true,\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"input-description\",\n    fullWidth: true,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"input-description\",\n    placeholder: \"Description\",\n    fullWidth: true,\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, \"add todo\")));\n}\n\nexport default TodoForm;","map":{"version":3,"sources":["/Users/zim/WORK/GIT-REPOS/JAVASCRIPT/REACT/assets/SANDPIT/CRA/omni-todo-app/src/components/TodoForm.js"],"names":["React","useState","useEffect","makeStyles","IconButton","Input","FilledInput","OutlinedInput","InputLabel","InputAdornment","FormHelperText","FormControl","TextField","Visibility","VisibilityOff","useStyles","theme","root","display","flexWrap","margin","spacing","withoutLabel","marginTop","textField","width","modal","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","TodoForm","props","console","log","classes","Id","setId","Math","floor","random","sections","setSections","input","setInput","handleChange","e","target","value","inputDescription","setInputDescription","handleChangeDescription","editId","todos","result","filter","todo","id","dir","text","complete","description","handleSubmit","preventDefault","onSubmit","parentNode","selected","onClickHide","editTodo","setEdit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    margin: {\n        margin: theme.spacing(1),\n    },\n    withoutLabel: {\n        marginTop: theme.spacing(3),\n    },\n    textField: {\n        width: '25ch',\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\n\nfunction TodoForm(props) {\n\n    console.log(props);\n    const classes = useStyles();\n\n    // const [Id, setId] = useState(null);\n    const [Id, setId] = useState(Math.floor(Math.random() * 10000));\n\n    const [sections, setSections] = useState(props.sections);\n\n    const [input, setInput] = useState(\"\");\n\n    const handleChange = (e) => {\n        setInput(e.target.value);\n    };\n\n    \n\n\n    const [inputDescription, setInputDescription] = useState(\"\");\n\n    const handleChangeDescription = (e) => {\n        setInputDescription(e.target.value);\n    };\n\n   \n\n    useEffect(() => {\n        console.log(\"useEffect Todo form\");\n        console.log(props);\n\n        console.log(props.editId);\n        console.log(props.todos);\n\n\n\n\n        if (props.editId == null) {\n            console.log('id = nullll');\n        } else {\n            console.log('id NOT nullll');\n            console.log(props.editId);\n\n            const result = props.todos.filter(todo => todo.id === props.editId);\n            console.dir(result);\n            console.log(result[0].id);\n    \n            console.log(result[0].text);\n            console.log(result[0].complete);\n            console.log(result[0].description);\n\n            setId(result[0].id);\n            setInput(result[0].text);\n            \n            setInputDescription(result[0].description);\n            \n        }\n\n        // setInput(e.target.value);\n        // setInputSection(e.target.value);\n\n        // const todos = JSON.parse(localStorage.getItem('todos'));\n        // if (todos) {\n        //     setTodos(todos);\n        // }\n    }, []);\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        // console.dir(e.target.parentNode[0][0].text);\n        console.log(props.editId);\n        console.log(props.todos);\n\n        if (props.editId == null) {\n            console.log('id = nullll');\n\n            props.onSubmit({\n                id: Id,\n                text: input,\n                complete: false,\n                description: inputDescription\n            });\n            setInput(\"\");\n            setInputDescription(\"\");\n\n            e.target.parentNode[0][0].selected = true;\n\n            props.onClickHide();\n\n        } else {\n            props.editTodo(Id, input, inputDescription);\n            props.setEdit();\n            props.onClickHide();\n        }\n\n\n    };\n\n    return (\n        <React.Fragment >\n            <p>{Id}</p>\n            \n\n            <form onSubmit={handleSubmit} noValidate autoComplete=\"off\" className={classes.paper}>\n                \n                <FormControl fullWidth\n                    margin=\"normal\"\n                    \n                    >\n                    <InputLabel htmlFor=\"my-input-title\">Email address</InputLabel>\n                    <TextField\n                    id=\"input-description\"\n                    \n                    \n                    placeholder=\"Description\"\n                    fullWidth\n                    margin=\"normal\"\n                    \n                    variant=\"outlined\"\n                />\n                </FormControl>\n\n                <FormControl>\n                    <InputLabel htmlFor=\"input-description\" fullWidth\n                        margin=\"normal\">Description</InputLabel>\n                    <TextField\n                        id=\"input-description\"\n\n\n                        placeholder=\"Description\"\n                        fullWidth\n                        margin=\"normal\"\n\n                        variant=\"outlined\"\n                    />\n                </FormControl>\n                \n                \n                   \n               \n\n\n\n                <button onClick={handleSubmit}>add todo</button>\n            </form>\n\n\n\n        </React.Fragment>\n\n    );\n}\n\nexport default TodoForm;\n"]},"metadata":{},"sourceType":"module"}