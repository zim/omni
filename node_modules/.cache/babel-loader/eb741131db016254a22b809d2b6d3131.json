{"ast":null,"code":"var _jsxFileName = \"/Users/zim/WORK/GIT-REPOS/JAVASCRIPT/REACT/assets/SANDPIT/CRA/omni-todo-app/src/components/TodoList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from \"@material-ui/core/Button\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Avatar from '@material-ui/core/Avatar';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    // maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nfunction TodoList() {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([1]);\n  const [todos, setTodos] = useState([]);\n  const [todosSelected, setTodosSelected] = useState([]); //Track is edit clicked or not\n\n  const [editId, setEdit] = useState(null); //Save input value in input box\n\n  const [inputValue, setInputValue] = useState(\"\");\n  useEffect(() => {\n    console.log(\"use effect one\");\n    const todos = JSON.parse(localStorage.getItem('todos'));\n\n    if (todos) {\n      setTodos(todos);\n    }\n  }, []);\n  useEffect(() => {\n    console.log(\"use effect two\");\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n  console.log(todos);\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Create Todo\"), /*#__PURE__*/React.createElement(Modal, {\n    \"aria-labelledby\": \"transition-modal-title\",\n    \"aria-describedby\": \"transition-modal-description\",\n    className: classes.modal,\n    open: open,\n    onClose: handleClose,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Fade, {\n    in: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TodoForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(List, {\n    dense: true,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, todos.map((todo, index) => {\n    const labelId = `checkbox-list-secondary-label-${todo.text}`;\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: todo.id,\n      button: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      alt: `Avatar nÂ°${todo.id + 1}`,\n      src: `/static/images/avatar/${todo.id + 1}.jpg`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      primary: `Line item ${todo.id + 1}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      primary: todo.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      label: \"hello\",\n      edge: \"end\",\n      onChange: handleToggle(todo.id),\n      checked: checked.indexOf(todo.id) !== -1,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 33\n      }\n    })));\n  })));\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/zim/WORK/GIT-REPOS/JAVASCRIPT/REACT/assets/SANDPIT/CRA/omni-todo-app/src/components/TodoList.js"],"names":["React","useState","useEffect","TodoForm","makeStyles","Button","List","ListItem","ListItemSecondaryAction","ListItemText","ListItemAvatar","Checkbox","Avatar","Modal","Backdrop","Fade","useStyles","theme","root","width","backgroundColor","palette","background","paper","modal","display","alignItems","justifyContent","border","boxShadow","shadows","padding","spacing","TodoList","classes","checked","setChecked","todos","setTodos","todosSelected","setTodosSelected","editId","setEdit","inputValue","setInputValue","console","log","JSON","parse","localStorage","getItem","setItem","stringify","open","setOpen","handleOpen","handleClose","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","timeout","map","todo","index","labelId","text","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TodoForm from \"./TodoForm\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from \"@material-ui/core/Button\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        // maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\nfunction TodoList() {\n    const classes = useStyles();\n    const [checked, setChecked] = React.useState([1]);\n\n    const [todos, setTodos] = useState([]);\n\n    const [todosSelected, setTodosSelected] = useState([]);\n    //Track is edit clicked or not\n    const [editId, setEdit] = useState(null);\n    //Save input value in input box\n    const [inputValue, setInputValue] = useState(\"\");\n\n    useEffect(() => {\n        console.log(\"use effect one\");\n\n        const todos = JSON.parse(localStorage.getItem('todos'));\n        if (todos) {\n            setTodos(todos);\n        }\n    }, []);\n\n    useEffect(() => {\n        console.log(\"use effect two\");\n\n        localStorage.setItem('todos', JSON.stringify(todos));\n    }, [todos]);\n\n    console.log(todos);\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleToggle = (value) => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setChecked(newChecked);\n    };\n\n\n    return (\n        <React.Fragment>\n            \n            <Button variant=\"contained\" color=\"primary\" onClick={handleOpen}>\n                Create Todo\n            </Button>\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <div className={classes.paper}>\n                        \n                        <TodoForm />\n                    </div>\n                </Fade>\n            </Modal>\n\n            <List dense className={classes.root}>\n                {todos.map((todo, index) => {\n                    const labelId = `checkbox-list-secondary-label-${todo.text}`;\n                    return (\n                        <ListItem key={todo.id} button>\n                            <ListItemAvatar>\n                                <Avatar\n                                    alt={`Avatar nÂ°${todo.id + 1}`}\n                                    src={`/static/images/avatar/${todo.id + 1}.jpg`}\n                                />\n                            </ListItemAvatar>\n                            <ListItemText id={labelId} primary={`Line item ${todo.id + 1}`} />\n                            <ListItemText id={labelId} primary={todo.text} />\n                            <ListItemSecondaryAction>\n                                <Checkbox\n                                label=\"hello\"\n                                    edge=\"end\"\n                                    onChange={handleToggle(todo.id)}\n                                    checked={checked.indexOf(todo.id) !== -1}\n                                    inputProps={{ 'aria-labelledby': labelId }}\n                                />\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                    );\n                })}\n            </List>\n\n        </React.Fragment>\n\n\n    );\n}\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}